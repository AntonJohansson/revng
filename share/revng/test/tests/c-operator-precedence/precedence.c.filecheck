//
// Copyright (c) rev.ng Labs Srl. See LICENSE.md for details.
//

// Class 12 (&&)
CHECK-LABEL: from_class_12_to_class_11(generic64_t
//           a || b && c
CHECK:       return _argument0 != 0 || _argument1 != 0 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_10(generic64_t
//           a | b && c
CHECK:       return (_argument0 | _argument1) != 0 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_9(generic64_t
//           a ^ b && c
CHECK:       return _argument0 != _argument1 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_8(generic64_t
//           a & b && c
CHECK:       return (_argument0 & _argument1) != 0 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_7(generic64_t
//           a == b && c
CHECK:       return _argument0 == _argument1 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_6(generic64_t
//           a < b && c
CHECK:       return _argument0 < _argument1 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_5(generic64_t
//           a << b && c
CHECK:       return _argument0 << (_argument1 & 0x3F) != 0 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_4(generic64_t
//           a + b && c
CHECK:       return 0 - _argument1 != _argument0 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_3(generic64_t
//           a * b && c
CHECK:       return _argument1 * _argument0 != 0 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_2(generic64_t
//           -a && c
CHECK:       return _argument0 != 0 && _argument2 != 0;

CHECK-LABEL: from_class_12_to_class_1(generic64_t
//           a-- && c
CHECK:       return _argument2 != 0 && _argument0 != 0;


// Class 11 (||)
CHECK-LABEL: from_class_11_to_class_10(generic64_t
//           a | b || c
CHECK:       return (_argument1 | _argument2 | _argument0) != 0;

CHECK-LABEL: from_class_11_to_class_9(generic64_t
//           a ^ b || c
CHECK:       return _argument0 != _argument1 || _argument2 != 0;

CHECK-LABEL: from_class_11_to_class_8(generic64_t
//           a & b || c
CHECK:       return ((_argument0 & _argument1) | _argument2) != 0;

CHECK-LABEL: from_class_11_to_class_7(generic64_t
//           a == b || c
CHECK:       return _argument0 == _argument1 || _argument2 != 0;

CHECK-LABEL: from_class_11_to_class_6(generic64_t
//           a < b || c
CHECK:       return _argument0 < _argument1 || _argument2 != 0;

CHECK-LABEL: from_class_11_to_class_5(generic64_t
//           a << b || c
CHECK:       return ((_argument0 << (_argument1 & 0x3F)) | _argument2) != 0;

CHECK-LABEL: from_class_11_to_class_4(generic64_t
//           a + b || c
CHECK:       return ((_argument0 + _argument1) | _argument2) != 0;

CHECK-LABEL: from_class_11_to_class_3(generic64_t
//           a * b || c
CHECK:       return ((_argument1 * _argument0) | _argument2) != 0;

CHECK-LABEL: from_class_11_to_class_2(generic64_t
//           -a || c
CHECK:       return (_argument0 | _argument2) != 0;

CHECK-LABEL: from_class_11_to_class_1(generic64_t
//           a-- || c
CHECK:       return (_argument0 | _argument2) != 0;


// Class 10 (|)
CHECK-LABEL: from_class_10_to_class_9(generic64_t
//           a ^ b | c
CHECK:       return (_argument0 ^ _argument1) | _argument2;

CHECK-LABEL: from_class_10_to_class_8(generic64_t
//           a & b | c
CHECK:       return (_argument0 & _argument1) | _argument2;

CHECK-LABEL: from_class_10_to_class_7(generic64_t
//           a == b | c
CHECK:       return (_argument0 == _argument1) | _argument2;

CHECK-LABEL: from_class_10_to_class_6(generic64_t
//           a < b | c
CHECK:       return (_argument0 < _argument1) | _argument2;

CHECK-LABEL: from_class_10_to_class_5(generic64_t
//           a << b | c
CHECK:       return (_argument0 << (_argument1 & 0x3F)) | _argument2;

CHECK-LABEL: from_class_10_to_class_4(generic64_t
//           a + b | c
CHECK:       return (_argument1 + _argument0) | _argument2;

CHECK-LABEL: from_class_10_to_class_3(generic64_t
//           a * b | c
CHECK:       return (_argument1 * _argument0) | _argument2;

CHECK-LABEL: from_class_10_to_class_2(generic64_t
//           -a | c
CHECK:       return (0 - _argument0) | _argument2;

CHECK-LABEL: from_class_10_to_class_1(generic64_t
//           a-- | c
CHECK:       return _argument0 | _argument2;


// Class 9 (^)
CHECK-LABEL: from_class_9_to_class_8(generic64_t
//           a & b ^ c
CHECK:       return (_argument0 & _argument1) ^ _argument2;

CHECK-LABEL: from_class_9_to_class_7(generic64_t
//           a == b ^ c
CHECK:       return (_argument0 == _argument1) ^ _argument2;

CHECK-LABEL: from_class_9_to_class_6(generic64_t
//           a < b ^ c
CHECK:       return (_argument0 < _argument1) ^ _argument2;

CHECK-LABEL: from_class_9_to_class_5(generic64_t
//           a << b ^ c
CHECK:       return (_argument0 << (_argument1 & 0x3F)) ^ _argument2;

CHECK-LABEL: from_class_9_to_class_4(generic64_t
//           a + b ^ c
CHECK:       return (_argument1 + _argument0) ^ _argument2;

CHECK-LABEL: from_class_9_to_class_3(generic64_t
//           a * b ^ c
CHECK:       return (_argument1 * _argument0) ^ _argument2;

CHECK-LABEL: from_class_9_to_class_2(generic64_t
//           -a ^ c
CHECK:       return (0 - _argument0) ^ _argument2;

CHECK-LABEL: from_class_9_to_class_1(generic64_t
//           a-- ^ c
CHECK:       return _argument0 ^ _argument2;


// Class 8 (&)
CHECK-LABEL: from_class_8_to_class_7(generic64_t
//           a == b & c
CHECK:       return (_argument0 == _argument1) & _argument2;

CHECK-LABEL: from_class_8_to_class_6(generic64_t
//           a < b & c
CHECK:       return (_argument0 < _argument1) & _argument2;

CHECK-LABEL: from_class_8_to_class_5(generic64_t
//           a << b & c
CHECK:       return (_argument0 << (_argument1 & 0x3F)) & _argument2;

CHECK-LABEL: from_class_8_to_class_4(generic64_t
//           a + b & c
CHECK:       return (_argument1 + _argument0) & _argument2;

CHECK-LABEL: from_class_8_to_class_3(generic64_t
//           a * b & c
CHECK:       return (_argument1 * _argument0) & _argument2;

CHECK-LABEL: from_class_8_to_class_2(generic64_t
//           -a & c
CHECK:       return (0 - _argument0) & _argument2;

CHECK-LABEL: from_class_8_to_class_1(generic64_t
//           a-- & c
CHECK:       return _argument0 & _argument2;



// Class 7 (==)
CHECK-LABEL: from_class_7_to_class_6(generic64_t
//           a < b == c
CHECK:       return _argument0 < _argument1 == _argument2;

CHECK-LABEL: from_class_7_to_class_5(generic64_t
//           a << b == c
CHECK:       return _argument0 << (_argument1 & 0x3F) == _argument2;

CHECK-LABEL: from_class_7_to_class_4(generic64_t
//           a + b == c
CHECK:       return _argument0 + _argument1 == _argument2;

CHECK-LABEL: from_class_7_to_class_3(generic64_t
//           a * b == c
CHECK:       return _argument1 * _argument0 == _argument2;

CHECK-LABEL: from_class_7_to_class_2(generic64_t
//           -a == c
CHECK:       !(_argument2 + _argument0);

CHECK-LABEL: from_class_7_to_class_1(generic64_t
//           a-- == c
CHECK:       return _argument0 == _argument2;

// Class 6 (<)
CHECK-LABEL: from_class_6_to_class_5(generic64_t
//           a << b < c
CHECK:       return _argument0 << (_argument1 & 0x3F) < _argument2;

CHECK-LABEL: from_class_6_to_class_4(generic64_t
//           a + b < c
CHECK:       return _argument0 + _argument1 < _argument2;

CHECK-LABEL: from_class_6_to_class_3(generic64_t
//           a * b < c
CHECK:       return _argument1 * _argument0 < _argument2;

CHECK-LABEL: from_class_6_to_class_2(generic64_t
//           -a < c
CHECK:       return 0 - _argument0 < _argument2;

CHECK-LABEL: from_class_6_to_class_1(generic64_t
//           a-- < c
CHECK:       return _argument0 < _argument2;



// Class 5 (<<)
CHECK-LABEL: from_class_5_to_class_4(generic64_t
//           a + b << c
CHECK:       return (_argument1 + _argument0) << (_argument2 & 0x3F);

CHECK-LABEL: from_class_5_to_class_3(generic64_t
//           a * b << c
CHECK:       return (_argument1 * _argument0) << (_argument2 & 0x3F);

CHECK-LABEL: from_class_5_to_class_2(generic64_t
//           -a << c
CHECK:       return (0 - _argument0) << (_argument2 & 0x3F);

CHECK-LABEL: from_class_5_to_class_1(generic64_t
//           a-- << c
CHECK:       return _argument0 << (_argument2 & 0x3F);


// Class 4 (+)
CHECK-LABEL: from_class_4_to_class_3(generic64_t
//           a * b + c
CHECK:       return _argument1 * _argument0 + _argument2;

CHECK-LABEL: from_class_4_to_class_2(generic64_t
//           -a + c
CHECK:       return _argument2 - _argument0;

CHECK-LABEL: from_class_4_to_class_1(generic64_t
//           a-- + c
CHECK:       return _argument2 + _argument0;


// Class 3 (*)
CHECK-LABEL: from_class_3_to_class_2(generic64_t
//           -a * c
CHECK:       return 0 - _argument2 * _argument0;

CHECK-LABEL: from_class_3_to_class_1(generic64_t
//           a-- * c
CHECK:       return _argument2 * _argument0;


// Class 2 (unary)
CHECK-LABEL: from_class_2_to_class_1(generic64_t
//           -a--
CHECK:       return 0 - _argument0;
