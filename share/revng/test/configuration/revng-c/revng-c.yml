#
# Copyright (c) rev.ng Labs Srl. See LICENSE.md for details.
#

commands:
  - type: revng-c.ptml-decompiled-c
    from:
      - type: revng-qa.compiled
        filter: one-per-architecture
      - type: revng.abi-enforced-for-decompilation
    suffix: .bc
    command: |-
      revng analyze revng-initial-auto-analysis "$INPUT1" --resume "$OUTPUT" -o /dev/null;
      revng analyze detect-stack-size "$INPUT1" --resume "$OUTPUT" -o /dev/null;
      revng analyze dla "$INPUT1" --resume "$OUTPUT" -o /dev/null;
      revng artifact DecompiledYAMLToC "$INPUT1" --resume "$OUTPUT" -o /dev/null;
  - type: revng-c.ptml-model-to-header
    from:
      - type: revng-c.ptml-decompiled-c
    suffix: .ptml.model.h
    command: |-
      revng model to-header -i "$INPUT"/context/model.yml -o "$OUTPUT";
  - type: revng-c.model-to-header
    from:
      - type: revng-c.ptml-model-to-header
    suffix: .model.h
    command: |-
      revng ptml --plain "$INPUT" -o "$OUTPUT";
      revng check-decompiled-c "$OUTPUT";
  - type: revng-c.ptml-helpers-to-header
    from:
      - type: revng-c.ptml-decompiled-c
    suffix: .ptml.helpers.h
    command: |-
      LL_WITH_MODEL=$$(temp);
      revng model inject "$INPUT"/context/model.yml "$INPUT"/IRCanonicalization/module.ll -o "$$LL_WITH_MODEL";
      revng helpers-to-header -i "$$LL_WITH_MODEL" -o "$OUTPUT";
  - type: revng-c.helpers-to-header
    from:
      - type: revng-c.ptml-helpers-to-header
    suffix: .helpers.h
    command: |-
      revng ptml --plain "$INPUT" -o "$OUTPUT"
      revng check-decompiled-c "$OUTPUT"
  - type: revng-c.decompiled-c
    from:
      - type: revng-c.ptml-decompiled-c
    suffix: .c
    command: |-
      revng ptml --plain "$INPUT"/DecompiledYAMLToC/decompiled.c -o "$OUTPUT"
  - type: revng-c.check-decompiled-c-arch-i386
    from:
      - type: revng-c.decompiled-c
        filter: one-per-architecture and i386
      - type: revng-c.model-to-header
        filter: one-per-architecture and i386
      - type: revng-c.helpers-to-header
        filter: one-per-architecture and i386
    command: |-
      TMP=$$(temp -d);
      cp -a "$INPUT1" "$$TMP/decompiled.c";
      cp -a "$INPUT2" "$$TMP/types-and-globals.h";
      cp -a "$INPUT3" "$$TMP/helpers.h";
      revng check-decompiled-c "$$TMP/decompiled.c" -I"$$TMP" -m32
  - type: revng-c.check-decompiled-c-arch-not-i386
    from:
      - type: revng-c.decompiled-c
        filter: one-per-architecture and !i386
      - type: revng-c.model-to-header
        filter: one-per-architecture and !i386
      - type: revng-c.helpers-to-header
        filter: one-per-architecture and !i386
    command: |-
      TMP=$$(temp -d);
      cp -a "$INPUT1" "$$TMP/decompiled.c";
      cp -a "$INPUT2" "$$TMP/types-and-globals.h";
      cp -a "$INPUT3" "$$TMP/helpers.h";
      revng check-decompiled-c "$$TMP/decompiled.c" -I"$$TMP"
  - type: revng-c.test-segregate-stack-accesses
    from:
      - type: revng-qa.compiled-with-debug-info
        filter: for-segregate-stack-accesses
    command: |-
      RESUME=$$(temp -d);
      revng analyze --resume "$$RESUME" ImportBinary "$INPUT" -o /dev/null;
      revng analyze --resume "$$RESUME" AddPrimitiveTypes "$INPUT" -o /dev/null;

      revng model override-by-name
        "$$RESUME/context/model.yml"
        ${SOURCE}.override.yml
        > "$$RESUME/context/model-tmp.yml";
      mv "$$RESUME/context/model-tmp.yml" "$$RESUME/context/model.yml";

      revng analyze --resume "$$RESUME" DetectABI "$INPUT" -o /dev/null;
      revng analyze --resume "$$RESUME" detect-stack-size "$INPUT" -o /dev/null;
      revng artifact --resume "$$RESUME" MakeSegmentRefs "$INPUT" | FileCheck ${SOURCE}.filecheck.ll;
      revng artifact --resume "$$RESUME" DecompileToCInYAML "$INPUT" -o /dev/null
  - type: revng-c.test-detect-stack-size
    from:
      - type: revng-qa.compiled-with-debug-info
        filter: for-detect-stack-size
    command: |-
      RESUME=$$(temp -d);
      revng analyze --resume "$$RESUME" ImportBinary "$INPUT" -o /dev/null;
      revng analyze --resume "$$RESUME" AddPrimitiveTypes "$INPUT" -o /dev/null;
      revng analyze --resume "$$RESUME" DetectABI "$INPUT" -o /dev/null;
      revng analyze --resume "$$RESUME" detect-stack-size "$INPUT" | revng model compare "${SOURCE}.model.yml" -
  - type: revng-c.test-daemon-all-artifacts
    from:
      - type: revng-qa.compiled
        filter: example-executable-1 and with-debug-info
    command: |-
      TMP="$$(temp)";
      if ! revng graphql --analyses-list=revng-initial-auto-analysis --analyses-list=revng-c-initial-auto-analysis --produce-artifacts --filter-artifacts=revng-c "$INPUT" &> "$$TMP"; then
        cat "$$TMP";
        exit 1;
      fi;
